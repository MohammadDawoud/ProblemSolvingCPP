//============================================================================
// Name        : SlidingWindowMaximum.cpp
// Author      : Mohamed Dawoud
// Version     :
// Copyright   : Your copyright notice
// Description : Hello World in C++, Ansi-style
//============================================================================

#include <iostream>
#include <vector>
#include <deque>

using namespace std;

vector<int> maxSlidingWindow(vector<int>& nums, int k) {
    vector<int> result;
    deque <int> sliding;
    result.reserve(nums.size());

    // calculate for the first sliding window for K steps get the max
    int i=0;
    sliding.push_back(nums[0]);
    for(i=1; i < k; i++) {
    	while(sliding.empty() == false && nums[i] > sliding.front()){
    			sliding.pop_front();
    	}
    	sliding.push_back(nums[i]);
    }

    result.push_back(sliding.front());


    // calculate for the rest for each step. get the max
    for(; i < nums.size(); i++) {
    	if(sliding.size() == k) {
    		sliding.pop_front();
    	}
    	while(sliding.empty() == false && nums[i] > sliding.front()){
			sliding.pop_front();
    	}
    	sliding.push_back(nums[i]);

    	result.push_back(sliding.front());
    }


	return result;

}
int main() {

	vector<int> v {1,3,-1,-3,5,3,6,7};
	 v = maxSlidingWindow(v,3);


	 for(int i =0; i< v.size(); i++) {
		 cout << v[i] << ", ";
	 }
	return 0;
}
