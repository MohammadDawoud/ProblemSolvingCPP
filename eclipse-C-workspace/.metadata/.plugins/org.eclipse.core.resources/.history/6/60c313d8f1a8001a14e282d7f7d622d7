//============================================================================
// Name        : NumberofSubmatricesThatSumtoTarget.cpp
// Author      : Mohamed Dawoud
// Version     :
// Copyright   : Your copyright notice
// Description : Hello World in C++, Ansi-style
//============================================================================

#include <iostream>
#include <algorithm>
#include <vector>

using namespace std;


vector<vector<int>> getPrefixSum(vector<vector<int>> matrix) {

	int rSize = matrix.size();
	int cSize = matrix[0].size();
	vector<vector<int>> prefixSum (rSize) ;
    //vector<vector<int> > vec(5);


	for(uint i=0; i < matrix.size(); i++) {

		prefixSum[i] = vector<int>(cSize);
		for(uint j=1; j < matrix[0].size(); j++) {
			prefixSum[i][j] += matrix[i][j-1];
		}
	}

	for(uint c=0; c < matrix.size(); c++) {
		for(uint r=1; r < matrix[0].size(); r++) {
			prefixSum[r][c] += matrix[r-1][c];
		}
	}

	return prefixSum;
}

int getSubmatricesCount(vector<vector<int>> matrix, int target) {

	vector<vector<int>> prefixSum = getPrefixSum(matrix);

	for(uint i=0; i< prefixSum.size(); i++) {
		for(uint j=0; j < prefixSum[i].size(); j++)
			cout << prefixSum[i][j] << " ";
		cout << endl;
	}

	cout << endl;
	cout << endl;

	return 0;

}

int main() {

	vector<vector<int>> matrix = {
					  {0, 1, 0},
					  {1, 1, 1},
					  {0, 1, 0}		};

	int target = 0;

	getSubmatricesCount(matrix, target);

	return 0;
}
