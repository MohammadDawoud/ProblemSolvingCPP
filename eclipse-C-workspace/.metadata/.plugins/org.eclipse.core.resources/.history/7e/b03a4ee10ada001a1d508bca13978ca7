//============================================================================
// Name        : BinaryTreeRightSideView.cpp
// Author      : Mohamed Dawoud
// Version     :
// Copyright   : Your copyright notice
// Description : Hello World in C++, Ansi-style
//============================================================================

#include <iostream>
#include <vactor>
using namespace std;



void rightSideView(TreeNode* node, int currentDepth, int& maxDepth,  vector<int> & result) {
    //base case
    if(node == NULL) {
        return;
    }

    // recursion case
    if(currentDepth>maxDepth) {
        result.push_back(node->val);
        maxDepth = currentDepth;
    }

    rightSideView(node->right, currentDepth+1, maxDepth, result);
    rightSideView(node->left, currentDepth+1, maxDepth, result);


}
vector<int> rightSideView(TreeNode* root) {

    vector<int>  result;
    int tmp =0;
    rightSideView(root, 1,tmp, result);
    return result;
}

int main() {
	cout << "" << endl; // prints 
	return 0;
}
