//============================================================================
// Name        : BinaryTreeLevelOrderTraversalII.cpp
// Author      : Mohamed Dawoud
// Version     :
// Copyright   : Your copyright notice
// Description : Hello World in C++, Ansi-style
//============================================================================

#include <iostream>
#include <vector>
using namespace std;

struct TreeNode {
	int val;
	TreeNode *left;
	TreeNode *right;
	TreeNode() : val(0), left(nullptr), right(nullptr) {}
	TreeNode(int x) : val(x), left(nullptr), right(nullptr) {}
	TreeNode(int x, TreeNode *left, TreeNode *right) : val(x), left(left), right(right) {}
};

void levelOrderBottomRecursive(vector<TreeNode> lvl, vector<vector<int>> results) {
	//base case
	if(lvl.size() == 0)
	{
		return;
	}

	vector<TreeNode> nextLevel;
	nextLevel.
	for()



}

vector<vector<int>> levelOrderBottom(TreeNode* root) {




}

int main() {
	cout << "" << endl; // prints 
	return 0;
}
