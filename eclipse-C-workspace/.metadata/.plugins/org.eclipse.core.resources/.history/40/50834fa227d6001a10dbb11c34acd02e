//============================================================================
// Name        : LargestRectangleInHistogram.cpp
// Author      : Mohamed Dawoud
// Version     :
// Copyright   : Your copyright notice
// Description : Hello World in C++, Ansi-style
//============================================================================
/*
 84. Largest Rectangle in Histogram

Given n non-negative integers representing the histogram's bar height where the width of each bar is 1, find the area of largest rectangle in the histogram.




Above is a histogram where width of each bar is 1, given height = [2,1,5,6,2,3].




The largest rectangle is shown in the shaded area, which has area = 10 unit.



Example:

Input: [2,1,5,6,2,3]
Output: 10
 */
#include <iostream>
#include <vector>
#include <stack>
using namespace std;

int largestRectangleArea(vector<int>& heights) {
    int area = 0;
    stack <int> st = stack<int>();


    for(uint i =0; i < heights.size(); i++) {
    	int topIndex = st.top();
    	// if current height is greater than height in the stack
    	// push it into stack to calculate it late
    	// if current height is less height in the stack
    	// keep poping and calculate the area to each pop()

    	while (heights[i] > heights[topIndex])

    	while(st.empty() == false ) {

    		if()
    	}


    	if(st.empty()) {
    		// push into stack
    		// calculate the area based on the current position till zero
    	}
    }



	return area;
}


int main() {
	cout << "" << endl; // prints 
	return 0;
}
